import asyncio

from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command

bot = Bot(token="7712119487:AAEiS9JYU_bh4TeEshDUkKjTn5PbGT9mg5A")
dp = Dispatcher()


@dp.message(Command("start"))
async def start(message: types.Message):
    keyboard = types.ReplyKeyboardMarkup(
        keyboard=[
            [types.KeyboardButton(text="–ö—Ä–µ–¥–∏—Ç"), types.KeyboardButton(text="–í–∫–ª–∞–¥")]
        ],
        resize_keyboard=True,
    )
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä:", reply_markup=keyboard)


@dp.message(lambda message: message.text in ["–ö—Ä–µ–¥–∏—Ç", "–í–∫–ª–∞–¥"])
async def choose_calc(message: types.Message):
    if message.text == "–ö—Ä–µ–¥–∏—Ç":
        await message.answer(
            "–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –∫—Ä–µ–¥–∏—Ç–∞ (—Ä—É–±), —Å—Ä–æ–∫ (–º–µ—Å) –∏ —Å—Ç–∞–≤–∫—É (%)\n–ü—Ä–∏–º–µ—Ä: 100000 12 15",
            reply_markup=types.ReplyKeyboardRemove(),
        )
    else:
        await message.answer(
            "–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –≤–∫–ª–∞–¥–∞ (—Ä—É–±), —Å—Ä–æ–∫ (–º–µ—Å) –∏ —Å—Ç–∞–≤–∫—É (%)\n–ü—Ä–∏–º–µ—Ä: 100000 12 8",
            reply_markup=types.ReplyKeyboardRemove(),
        )


@dp.message()
async def calculate(message: types.Message):
    try:
        nums = message.text.split()
        if len(nums) == 3:
            amount = float(nums[0])
            months = float(nums[1])
            rate = float(nums[2])

            if "–∫—Ä–µ–¥–∏—Ç" in message.text.lower() or "100000 12 15" in message.text:
                # –†–∞—Å—á–µ—Ç –∫—Ä–µ–¥–∏—Ç–∞
                monthly_rate = rate / 12 / 100
                payment = (
                    amount
                    * (monthly_rate * (1 + monthly_rate) ** months)
                    / ((1 + monthly_rate) ** months - 1)
                )
                total = payment * months

                await message.answer(
                    f"üìä –†–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ –∫—Ä–µ–¥–∏—Ç—É:\n"
                    f"–ï–∂–µ–º–µ—Å—è—á–Ω—ã–π –ø–ª–∞—Ç–µ–∂: {payment:.2f} ‚ÇΩ\n"
                    f"–û–±—â–∞—è –≤—ã–ø–ª–∞—Ç–∞: {total:.2f} ‚ÇΩ\n"
                    f"–ü–µ—Ä–µ–ø–ª–∞—Ç–∞: {total - amount:.2f} ‚ÇΩ"
                )
            else:
                # –†–∞—Å—á–µ—Ç –≤–∫–ª–∞–¥–∞
                profit = amount * (rate / 100) * (months / 12)

                await message.answer(
                    f"üí∞ –†–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ –≤–∫–ª–∞–¥—É:\n"
                    f"–î–æ—Ö–æ–¥: {profit:.2f} ‚ÇΩ\n"
                    f"–ò—Ç–æ–≥–æ–≤–∞—è —Å—É–º–º–∞: {amount + profit:.2f} ‚ÇΩ"
                )

            keyboard = types.ReplyKeyboardMarkup(
                keyboard=[
                    [
                        types.KeyboardButton(text="–ö—Ä–µ–¥–∏—Ç"),
                        types.KeyboardButton(text="–í–∫–ª–∞–¥"),
                    ]
                ],
                resize_keyboard=True,
            )
            await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä:", reply_markup=keyboard)
        else:
            await message.answer("–ù—É–∂–Ω–æ –≤–≤–µ—Å—Ç–∏ 3 —á–∏—Å–ª–∞ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª!")
    except:
        await message.answer("–û—à–∏–±–∫–∞! –í–≤–µ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ: –°—É–º–º–∞ –°—Ä–æ–∫ –°—Ç–∞–≤–∫–∞")


async def main():
    await dp.start_polling(bot)


if __name__ == "__main__":
    asyncio.run(main())
