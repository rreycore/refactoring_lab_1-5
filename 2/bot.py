import asyncio

from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from aiogram.utils.keyboard import ReplyKeyboardBuilder
from calculators import calculate_credit, calculate_deposit


# –°–æ—Å—Ç–æ—è–Ω–∏—è –±–æ—Ç–∞
class CalcState(StatesGroup):
    waiting_credit = State()
    waiting_deposit = State()


# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
bot = Bot(token="7900164820:AAGFhWIzg_k7vJLvFuZZEDfWlsd7qgD8tXo")
dp = Dispatcher()


# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
async def show_main_menu(message: types.Message):
    builder = ReplyKeyboardBuilder()
    builder.add(types.KeyboardButton(text="–ö—Ä–µ–¥–∏—Ç–Ω—ã–π –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä"))
    builder.add(types.KeyboardButton(text="–í–∫–ª–∞–¥–Ω–æ–π –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä"))
    await message.answer(
        "–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø —Ä–∞—Å—á–µ—Ç–∞:", reply_markup=builder.as_markup(resize_keyboard=True)
    )


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@dp.message(Command("start"))
async def cmd_start(message: types.Message):
    await show_main_menu(message)


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞
@dp.message(
    lambda message: message.text in ["–ö—Ä–µ–¥–∏—Ç–Ω—ã–π –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä", "–í–∫–ª–∞–¥–Ω–æ–π –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä"]
)
async def calc_choice(message: types.Message, state: FSMContext):
    if message.text == "–ö—Ä–µ–¥–∏—Ç–Ω—ã–π –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä":
        await state.set_state(CalcState.waiting_credit)
        await message.answer(
            "–í–≤–µ–¥–∏—Ç–µ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª:\n–°—É–º–º–∞ –∫—Ä–µ–¥–∏—Ç–∞ (—Ä—É–±)\n–°—Ä–æ–∫ (–º–µ—Å)\n–ü—Ä–æ—Ü–µ–Ω—Ç–Ω–∞—è —Å—Ç–∞–≤–∫–∞\n–ü—Ä–∏–º–µ—Ä: 100000 12 15",
            reply_markup=types.ReplyKeyboardRemove(),
        )
    else:
        await state.set_state(CalcState.waiting_deposit)
        await message.answer(
            "–í–≤–µ–¥–∏—Ç–µ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª:\n–°—É–º–º–∞ –≤–∫–ª–∞–¥–∞ (—Ä—É–±)\n–°—Ä–æ–∫ (–º–µ—Å)\n–ü—Ä–æ—Ü–µ–Ω—Ç–Ω–∞—è —Å—Ç–∞–≤–∫–∞\n–ü—Ä–∏–º–µ—Ä: 100000 12 8",
            reply_markup=types.ReplyKeyboardRemove(),
        )


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫—Ä–µ–¥–∏—Ç–Ω–æ–≥–æ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞
@dp.message(CalcState.waiting_credit)
async def credit_calc(message: types.Message, state: FSMContext):
    try:
        amount, months, rate = map(float, message.text.split())
        payment, total, overpayment = calculate_credit(amount, months, rate)

        await message.answer(
            f"üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ä–∞—Å—á–µ—Ç–∞ –∫—Ä–µ–¥–∏—Ç–∞:\n\n"
            f"‚Ä¢ –ï–∂–µ–º–µ—Å—è—á–Ω—ã–π –ø–ª–∞—Ç–µ–∂: {payment:.2f} ‚ÇΩ\n"
            f"‚Ä¢ –û–±—â–∞—è —Å—É–º–º–∞ –≤—ã–ø–ª–∞—Ç: {total:.2f} ‚ÇΩ\n"
            f"‚Ä¢ –ü–µ—Ä–µ–ø–ª–∞—Ç–∞: {overpayment:.2f} ‚ÇΩ"
        )
    except Exception as e:
        await message.answer(f"‚ùå –û—à–∏–±–∫–∞: {str(e)}\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑")
    finally:
        await show_main_menu(message)
        await state.clear()


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–∫–ª–∞–¥–Ω–æ–≥–æ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞
@dp.message(CalcState.waiting_deposit)
async def deposit_calc(message: types.Message, state: FSMContext):
    try:
        amount, months, rate = map(float, message.text.split())
        profit, total = calculate_deposit(amount, months, rate)

        await message.answer(
            f"üí∞ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ä–∞—Å—á–µ—Ç–∞ –≤–∫–ª–∞–¥–∞:\n\n"
            f"‚Ä¢ –î–æ—Ö–æ–¥: {profit:.2f} ‚ÇΩ\n"
            f"‚Ä¢ –ò—Ç–æ–≥–æ–≤–∞—è —Å—É–º–º–∞: {total:.2f} ‚ÇΩ"
        )
    except Exception as e:
        await message.answer(f"‚ùå –û—à–∏–±–∫–∞: {str(e)}\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑")
    finally:
        await show_main_menu(message)
        await state.clear()


# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
async def main():
    await dp.start_polling(bot)


if __name__ == "__main__":
    asyncio.run(main())
